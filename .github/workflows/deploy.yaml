name: Deploy to Kubernetes
on:
  push:
    branches:
      - main

env:
  DOCKER_REPO: ghcr.io/${{ github.repository_owner }}/site-frontend
  DOCKER_TAG: main
  HOST: "entreeqr.com"

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: global-cache
          restore-keys: global-cache
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REPO_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.DOCKER_REPO }}:${{ env.DOCKER_TAG }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    environment:
      name: Production
    steps:
      - name: Setup k8s context
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_PROD }}" >> ~/.kube/config
          chmod 600 ~/.kube/config
      - name: Install helm
        uses: azure/setup-helm@v3
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.DOCKER_TAG }}
      - name: Deploy to k8s cluster
        run: |
          helm upgrade --install site-frontend-${{ env.DOCKER_TAG }} chart/ \
          -n site-frontend-${{ env.DOCKER_TAG }} \
          --set image.repository="${{ env.DOCKER_REPO }}" \
          --set image.tag="${{ env.DOCKER_TAG }}" \
          \
          --set env.NODE_ENV=production \
          \
          --set-string nodeSelector."doks\\.digitalocean\\.com/node-pool"="${{ secrets.KUBE_POOL_ID_PROD }}" \
          \
          --set env.PORT="${{ secrets.PORT }}" --
